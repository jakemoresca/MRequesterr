@page "/"

@using MRequesterr.DTOs
@using MRequesterr.Helpers
@using MRequesterr.Models
@using MRequesterr.Services
@using MRequesterr.PWA.Shared.Card;
@using MRequesterr.PWA.Shared.Carousel;

@inject IRadarrService _radarrService;
@inject ISettingsService _settingsService;
@inject ISonarrService _sonarrService;

<PageTitle>Now Playing</PageTitle>


<div class="album py-5 bg-light">
    <div class="container">
        <h2>Now Available</h2>
        <Carousel Items="movies" ImageBaseUrl="@movieImageBaseUrl" BaseUrl="@integrationOptions.MovieSettings.BaseUrl" ApiKey="@integrationOptions.MovieSettings.ApiKey" />

        <Carousel Items="series" ImageBaseUrl="@seriesImageBaseUrl" BaseUrl="@integrationOptions.SeriesSettings.BaseUrl" ApiKey="@integrationOptions.SeriesSettings.ApiKey" />
    </div>
</div>

@code {
    List<MediaDto> movies = new List<MediaDto>();
    List<MediaDto> series = new List<MediaDto>();

    string viewType = "Poster";
    IntegrationOptions integrationOptions;
    string movieImageBaseUrl = string.Empty;
    string seriesImageBaseUrl = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        integrationOptions = _settingsService.GetSettings();

        var movieSettings = integrationOptions.MovieSettings;
        var seriesSettings = integrationOptions.SeriesSettings;

        var radarrPort = movieSettings.Port;
        var radarrHost = movieSettings.Host;
        var radarrUseSsl = movieSettings.UseSsl;
        var radarrBaseUrl = movieSettings.BaseUrl;
        var radarrProtocol = radarrUseSsl ? "https://" : "http://";

        var sonarrPort = seriesSettings.Port;
        var sonarrHost = seriesSettings.Host;
        var sonarrUseSsl = seriesSettings.UseSsl;
        var sonarrBaseUrl = seriesSettings.BaseUrl;
        var sonarrProtocol = sonarrUseSsl ? "https://" : "http://";

        movieImageBaseUrl = $"{radarrProtocol}{radarrHost}:{radarrPort}/radarr/api/v3/";
        seriesImageBaseUrl = $"{sonarrProtocol}{sonarrHost}:{sonarrPort}/sonarr/api/v3/";

        movies = await _radarrService.GetMovies();
        series = await _sonarrService.GetSeries();
    }
}