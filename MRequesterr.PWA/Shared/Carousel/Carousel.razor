@using DTOs
@using MRequesterr.PWA.Shared.Card;

<div id="carouselExampleControls" class="carousel">
  <div class="carousel-inner">
    <div class="carousel-item active">
      @foreach (var item in currentItems)
      {
        var imageUrl = item.Images.FirstOrDefault(x => x.CoverType == "poster");

        var url = ImageBaseUrl + imageUrl.Url?.Replace(BaseUrl, "") + $"&apikey={ApiKey}";

        <Card Title="@item.Title" ImageUrl="@url" />
      }
    </div>
  </div>

  <a id="carouselPrev" class="carousel-control-prev" href="#carouselExampleControls" role="button" @onclick="PrevItem">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a id="carouselNext" class="carousel-control-next" href="#carouselExampleControls" role="button" @onclick="NextItem">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

@code {
  [Parameter]
  public List<MediaDto> Items { get; set; }
  
  [Parameter]
  public string ImageBaseUrl { get; set; }

  [Parameter]
  public string BaseUrl {get; set;}

  [Parameter]
  public string ApiKey {get; set;}

  private List<MediaDto> currentItems = new List<MediaDto>();
  private int currentPage = 0;
  private int totalPage = 0;
  private int itemsPerPage = 4;

  protected override async Task OnInitializedAsync()
  {
  }

  protected override async Task OnParametersSetAsync()
  {
    totalPage = Items.Count / itemsPerPage;

    SetCurrentItems(currentPage);
  }

  private void SetCurrentItems(int page)
  {
    if(page > totalPage)
    {
      page = 0;
    }
    else if(page < 0)
    {
      page = totalPage;
    }

    currentItems = Items.Skip(page * itemsPerPage)
      .Take(itemsPerPage)
      .ToList();

    currentPage = page;
  }

  private void NextItem(MouseEventArgs eventArgs)
  {
    SetCurrentItems(currentPage + 1);
  }

  private void PrevItem(MouseEventArgs eventArgs)
  {
    SetCurrentItems(currentPage - 1);
  }
}